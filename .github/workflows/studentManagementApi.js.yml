# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: ["master"]

jobs:
  build:
    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          env:
            PORT: ${{ secrets.PORT }}
            DB_USERNAME: ${{ secrets.DB_USERNAME }}
            DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      - run: npm ci
      - run: npm run build --if-present
      - run: pm2 restart index.js
# # This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# # For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

# name: Node.js CI

# on:
#   push:
#     branches: ["master"]

# jobs:
#   build:
#     runs-on: self-hosted

#     strategy:
#       matrix:
#         node-version: [16.x, 18.x]
#         # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

#     steps:
#       - uses: actions/checkout@v3
#       - name: Create .env with Github Secrets and run script
#           run: |
#             touch .env
#             echo PORT=$PORT >> .env
#             echo DB_USERNAME=$DB_USERNAME >> .env
#             echo DB_PASSWORD=$DB_PASSWORD >> .env

#           env:
#             PORT: ${{ secrets.PORT }}
#             DB_USERNAME: ${{ secrets.DB_USERNAME }}
#             DB_PASSWORD: ${{ secrets.DB_PASSWORD }}

#       - name: Use Node.js ${{ matrix.node-version }}
#         uses: actions/setup-node@v3
#         with:
#           node-version: ${{ matrix.node-version }}
#           cache: "npm"
#       - run: npm ci
#       - run: npm run build --if-present
#       - run: pm2 restart index.js

